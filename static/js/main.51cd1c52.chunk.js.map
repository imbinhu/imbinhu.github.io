{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","links","setLinks","useEffect","urls","Paper","style","width","padding","margin","marginTop","Grid","justify","alignItems","container","item","xs","marginBottom","Typography","variant","map","title","url","direction","align","IconButton","onClick","navigator","clipboard","writeText","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sfAuEeA,MAvDf,WAAgB,IAAD,EAEeC,mBAAS,IAFxB,mBAEJC,EAFI,KAEGC,EAFH,KAgBf,OAZIC,qBAAU,WAGND,EAASE,KACV,IASH,mCACI,cAACC,EAAA,EAAD,CACIC,MAAO,CAAEC,MAAO,OAAQC,QAAS,GAAIC,OAAQ,OAAQC,UAAW,KADpE,SAEI,eAACC,EAAA,EAAD,CACIC,QAAQ,SACRC,WAAW,SACXC,WAAS,EAHb,UAII,cAACH,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAG,OAAOV,MAAO,CAAEG,OAAQ,GAAIQ,aAAc,IAAxD,SACI,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAApB,2BAEHlB,EAAMmB,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,IAAV,OACP,cAACX,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAG,KAAd,SACI,eAACL,EAAA,EAAD,CACIG,WAAS,EACTS,UAAU,MACVV,WAAW,SAHf,UAII,cAACF,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAG,IAAd,SACI,cAACE,EAAA,EAAD,CAAYM,MAAM,SAAlB,SAA4BH,MAEhC,cAACV,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAG,IAAd,SACI,cAACE,EAAA,EAAD,CAAYM,MAAM,SAAlB,SAA4BF,MAEhC,eAACX,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAG,IAAd,UACK,IACD,cAACS,EAAA,EAAD,CACIC,QAAS,kBAAMC,UAAUC,UAAUC,UAAUP,IADjD,SAEI,cAAC,IAAD,yBC/CrBQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.51cd1c52.chunk.js","sourcesContent":["\nimport './App.css';\nimport { useState, useEffect } from 'react';\n\nimport axios from 'axios';\nimport urls from './urls.json'\nimport {\n    Typography,\n    Grid,\n    IconButton,\n    Paper\n} from \"@material-ui/core\";\n\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\n\n\nfunction App() {\n\n    const [links, setLinks] = useState([]);\n\n    useEffect(() => {\n        // axios.get(`https://raw.githubusercontent.com/LorenzoTinfena/LorenzoTinfena/master/server/u`)\n        //     .then(res => setLinks(res.data))\n        setLinks(urls)\n    }, [])\n\n    /*const links = [\n        { title: \"primo link\", url: \"23270ff51881.ngrok.io\" },\n        { title: \"primo link\", url: \"23270ff51881.ngrok.io\" },\n        { title: \"primo link\", url: \"23270ff51881.ngrok.io\" }\n    ];*/\n//https://raw.githubusercontent.com/LorenzoTinfena/LorenzoTinfena/master/server/urls.json\nreturn (\n    <>\n        <Paper\n            style={{ width: \"50vw\", padding: 10, margin: \"auto\", marginTop: 100 }}>\n            <Grid\n                justify=\"center\"\n                alignItems=\"center\"\n                container>\n                <Grid item xs=\"auto\" style={{ margin: 10, marginBottom: 20 }}>\n                    <Typography variant=\"h5\">I MIEI LINK</Typography>\n                </Grid>\n                {links.map(({ title, url }) => (\n                    <Grid item xs=\"12\">\n                        <Grid\n                            container\n                            direction=\"row\"\n                            alignItems=\"center\">\n                            <Grid item xs=\"3\">\n                                <Typography align=\"center\">{title}</Typography>\n                            </Grid>\n                            <Grid item xs=\"5\">\n                                <Typography align=\"center\">{url}</Typography>\n                            </Grid>\n                            <Grid item xs=\"1\">\n                                {\" \"}\n                                <IconButton\n                                    onClick={() => navigator.clipboard.writeText(url)}>\n                                    <FileCopyIcon />\n                                </IconButton>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                ))}\n            </Grid>\n        </Paper>\n    </>\n);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}